"""Unique inline query offset

Revision ID: 09ed6db5a163
Revises: ca61ed4a75fd
Create Date: 2018-11-11 13:59:43.812912

"""
from alembic import op
import sqlalchemy as sa

import os
import sys
from sqlalchemy.orm.session import Session
# Set system path, so alembic is capable of finding the stickerfinder module
parent_dir = os.path.abspath(os.path.join(os.getcwd(), "..", "stickerfinder"))
sys.path.append(parent_dir)

from stickerfinder.models import InlineQuery, InlineQueryRequest # noqa


# revision identifiers, used by Alembic.
revision = '09ed6db5a163'
down_revision = 'ca61ed4a75fd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('inline_query_request_inline_query_id_fkey', 'inline_query_request', type_='foreignkey')
    op.create_foreign_key('inline_query_request_inline_query_id_fkey', 'inline_query_request', 'inline_query', ['inline_query_id'], ['id'], ondelete='CASCADE')
    op.add_column('inline_query_request', sa.Column('next_offset', sa.String(), nullable=True))

    session = Session(bind=op.get_bind())

    inline_queries = session.query(InlineQuery).all()

    for inline_query in inline_queries:
        for index, request in enumerate(inline_query.requests):
            if (index + 1) < len(inline_query.requests):
                next_request = inline_query.requests[index + 1]
                if request.inline_query_id == next_request.inline_query_id \
                        and request.offset == next_request.offset:
                    session.delete(request)
                elif request.inline_query_id == next_request.inline_query_id:
                    request.next_offset = next_request.offset

    session.commit()

    op.create_unique_constraint('inline_query_request_inline_query_id_offset_key', 'inline_query_request', ['inline_query_id', 'offset'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('inline_query_request_inline_query_id_fkey', 'inline_query_request', type_='foreignkey')
    op.create_foreign_key('inline_query_request_inline_query_id_fkey', 'inline_query_request', 'inline_query', ['inline_query_id'], ['id'])
    op.drop_constraint('inline_query_request_inline_query_id_offset_key', 'inline_query_request', type_='unique')
    op.drop_column('inline_query_request', 'next_offset')
    # ### end Alembic commands ###
